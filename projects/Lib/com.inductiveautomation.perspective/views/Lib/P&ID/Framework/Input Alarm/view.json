{
  "custom": {
    "tagPathAlarmEnable": null
  },
  "params": {
    "enable": true,
    "internal": false,
    "level": "DH",
    "max": 100,
    "min": 0,
    "tagPath": "[PID]NSR/WTR INJ/FI214.DHSP"
  },
  "propConfig": {
    "custom.tagPathAlarmEnable": {
      "binding": {
        "config": {
          "path": "view.params.tagPath"
        },
        "transforms": [
          {
            "code": "\t# this is internal alarm\n\tif \"/PV/Alarms\" in value:\n\t\treturn value.split(\".\")[0] + \".Enabled\"\n\t# this ABB PLC alarm\n\tif \"/ALM/SP/\" in value:\n\t\treturn value.split(\"/ALM/SP/\")[0] + \"/PV/Alarms/\" + self.params.level + \".Enabled\"\n\treturn None",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "params.enable": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.internal": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.level": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.max": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.min": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 32,
      "width": 429
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tif self.view.params.internal:\n\t\tstatus \u003d system.tag.read(self.view.custom.tagPathAlarmEnable).value\n\t\tsystem.tag.write(self.view.custom.tagPathAlarmEnable, not status)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Label",
          "tooltip": {
            "delay": 1000,
            "enabled": true,
            "location": "bottom",
            "tail": false
          }
        },
        "position": {
          "basis": "32px",
          "shrink": 0
        },
        "propConfig": {
          "meta.tooltip.text": {
            "binding": {
              "config": {
                "path": "view.params.internal"
              },
              "transforms": [
                {
                  "expression": "if({value}, \"Click To Disable/Enable Alarm\",\r\n\tif( tag({view.custom.tagPathAlarmEnable}), \"Alarm Enable\", \"Alarm Disable\"))",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.style": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "tagPathAlarmEnable": "{view.custom.tagPathAlarmEnable}"
                },
                "tagPath": "{tagPathAlarmEnable}"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d None:\n\t\treturn { \"classes\": \"pid-label\",\n\t\t\t\t  \"color\": \"--color-label-0\"}\n\t\n\t\n\tstyle \u003d { \"classes\": \"pid-label\",\n\t\t\t  \"cursor\": \"pointer\",\n\t\t\t  \"color\": \"--color-label-0\"}\n\t\n\tif self.view.params.internal:\n\t\n\t\tif value:\n\t\t\treturn style\t\n\t\telse:\n\t\t\tstyle[\"color\"] \u003d \"#D5D5D5\";\n\t\t\treturn style\t\n\telse:\n\t\tdel style[\"cursor\"]\n\n\t\tif value:\n\t\t\treturn style\t\n\t\t\n\t\telse:\n\t\t\tstyle[\"color\"] \u003d \"#D5D5D5\";\n\t\t\treturn style\n\t\t",
                  "type": "script"
                }
              ],
              "type": "tag"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.level"
              },
              "overlayOptOut": true,
              "type": "property"
            }
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "NumericEntryField"
        },
        "position": {
          "grow": 1
        },
        "propConfig": {
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "{session.custom.writeAccess} \u0026\u0026 {view.params.enable}"
              },
              "type": "expr"
            }
          },
          "props.inputBounds.maximum": {
            "binding": {
              "config": {
                "expression": "{view.params.max}"
              },
              "overlayOptOut": true,
              "type": "expr"
            }
          },
          "props.inputBounds.minimum": {
            "binding": {
              "config": {
                "expression": "{view.params.min}"
              },
              "overlayOptOut": true,
              "type": "expr"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "bidirectional": true,
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "tagPath": "{view.params.tagPath}"
                },
                "tagPath": "{tagPath}"
              },
              "overlayOptOut": true,
              "type": "tag"
            },
            "onChange": {
              "enabled": null,
              "script": "\tif previousValue !\u003d None and currentValue.value !\u003d previousValue.value and origin !\u003d \"Binding\":\n\t\tsystem.tag.write(self.view.params.tagPath ,self.props.value)\n\t\t\t\n\t\t\n\t\tUtil.audit(action \u003d self.view.params.level +\u0027 Level Changed\u0027, \n\t\t\t\t\tactionTarget \u003d self.view.params.tagPath.split(\u0027]\u0027)[-1],\n\t\t\t\t\tactionValue \u003d self.props.value,\n\t\t\t\t\tsession \u003d self.session)"
            }
          }
        },
        "props": {
          "inputBounds": {},
          "spinner": {
            "enabled": false
          },
          "style": {
            "classes": "pid-input"
          }
        },
        "type": "ia.input.numeric-entry-field"
      },
      {
        "meta": {
          "name": "lock"
        },
        "position": {
          "basis": "24px",
          "shrink": 0
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "expression": "!{session.custom.writeAccess}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "color": "--popup-icon",
          "path": "material/lock",
          "style": {
            "backgroundColor": "--color-pid-bk"
          }
        },
        "type": "ia.display.icon"
      }
    ],
    "meta": {
      "name": "root"
    },
    "type": "ia.container.flex"
  }
}