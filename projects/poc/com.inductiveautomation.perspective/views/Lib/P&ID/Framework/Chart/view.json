{
  "custom": {
    "DatePicker": "",
    "EndDate": {
      "$": [
        "ts",
        192,
        1697103353063
      ],
      "$ts": 1697103353063
    },
    "StartDate": {
      "$": [
        "ts",
        192,
        1697103353063
      ],
      "$ts": 1697099753063
    },
    "key": [
      {
        "aggregate": "LastValue"
      }
    ],
    "label": "F1/C1/SM1/SBC01/HWA1/LT1/Sts/Value",
    "selectedRange": {},
    "settings": {
      "color": "#CC79FF",
      "points": 500,
      "show": false,
      "yAxisAuto": false,
      "yAxisMax": "value",
      "yAxisMin": "value"
    }
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\t#\t\n#\tself.custom.EndDate \u003d system.date.now()\n#\tself.custom.StartDate \u003d system.date.addHours(system.date.now(), -1)\n\ttemp \u003d self.params.tagPath\n\tself.params.tagPath \u003d \u0027\u0027\n\tself.params.tagPath \u003d self.params.tagPath"
        },
        "enabled": false,
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "popup": false,
    "tagPath": "[nv]F1/C1/SM1/SBC01/HWA1/LT1/Sts/Value"
  },
  "propConfig": {
    "custom.DatePicker": {
      "onChange": {
        "enabled": null,
        "script": "\tif self.custom.DatePicker \u003d\u003d \"Start\":\n\t\t# set datedicker to previous Start Date\n\t\tself.getChild(\"root\").getChild(\"Main Area\").getChild(\"DateTimePicker\").props.value \u003d self.view.custom.StartDate\n\tif self.custom.DatePicker \u003d\u003d \"End\":\n\t\t# set datedicker to previous End Date\n\t\tself.getChild(\"root\").getChild(\"Main Area\").getChild(\"DateTimePicker\").props.value \u003d self.view.custom.EndDate\t\n\t\t"
      },
      "persistent": true
    },
    "custom.EndDate": {
      "binding": {
        "config": {
          "expression": "{view.params.tagPath}"
        },
        "transforms": [
          {
            "code": "\treturn system.date.now()",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "custom.StartDate": {
      "binding": {
        "config": {
          "expression": "{view.params.tagPath}"
        },
        "transforms": [
          {
            "code": "\treturn system.date.addMinutes(system.date.now(), -60)",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "custom.key": {
      "persistent": true
    },
    "custom.key[0].alias": {
      "binding": {
        "config": {
          "path": "view.custom.label"
        },
        "type": "property"
      }
    },
    "custom.key[0].path": {
      "binding": {
        "config": {
          "path": "view.params.tagPath"
        },
        "type": "property"
      }
    },
    "custom.label": {
      "binding": {
        "config": {
          "expression": "split({view.params.tagPath}, \"]\")[1,0]"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.selectedRange": {
      "persistent": true
    },
    "custom.selectedRange.end": {
      "binding": {
        "config": {
          "expression": "{view.params.tagPath}"
        },
        "transforms": [
          {
            "code": "\treturn system.date.now()",
            "type": "script"
          }
        ],
        "type": "expr"
      }
    },
    "custom.selectedRange.start": {
      "binding": {
        "config": {
          "expression": "{view.params.tagPath}"
        },
        "transforms": [
          {
            "code": "\treturn system.date.addMinutes(system.date.now(), -60)",
            "type": "script"
          }
        ],
        "type": "expr"
      }
    },
    "custom.settings": {
      "persistent": true
    },
    "params.popup": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 300,
      "width": 722
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tif self.view.custom.DatePicker \u003d\u003d \u0027Start\u0027:\n\t\t\n\t\tself.view.custom.StartDate \u003d system.date.setTime( self.props.value, 0,0,0)\n\n\telif self.view.custom.DatePicker \u003d\u003d \u0027End\u0027:\n\n\t\tself.view.custom.EndDate \u003d system.date.setTime( self.props.value, 23,59,59)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "DateTimePicker"
            },
            "position": {
              "basis": "230px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.tagPath"
                  },
                  "transforms": [
                    {
                      "code": "\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "formattedValue": "Jan 4, 2022 9:30 AM",
              "formattedValues": {
                "date": "Mar 5, 2021",
                "datetime": "Mar 5, 2021 10:09 PM",
                "time": "10:09 PM"
              },
              "pickerType": "date",
              "style": {
                "border-style": "none",
                "opacity": "1",
                "overflow": "hidden",
                "transition": "all 0.5s linear"
              },
              "value": {
                "$": [
                  "ts",
                  0,
                  1641242830723
                ],
                "$ts": 1641285000000
              }
            },
            "type": "ia.input.date-time-picker"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "TimeSeriesChart"
                },
                "position": {
                  "height": 280,
                  "width": "100%"
                },
                "propConfig": {
                  "props.plots[0].axes[0].max": {
                    "binding": {
                      "config": {
                        "struct": {
                          "auto": "{../Settings Menu/Y Axis Auto.props.selected}",
                          "max": "{../Settings Menu/Ymax.props.value}"
                        },
                        "waitOnAll": true
                      },
                      "transforms": [
                        {
                          "code": "\treturn \"\" if value[\"auto\"] else value[\"max\"]",
                          "type": "script"
                        }
                      ],
                      "type": "expr-struct"
                    }
                  },
                  "props.plots[0].axes[0].min": {
                    "binding": {
                      "config": {
                        "struct": {
                          "auto": "{../Settings Menu/Y Axis Auto.props.selected}",
                          "min": "{../Settings Menu/Ymin.props.value}"
                        },
                        "waitOnAll": true
                      },
                      "transforms": [
                        {
                          "code": "\treturn \"\" if value[\"auto\"] else value[\"min\"]",
                          "type": "script"
                        }
                      ],
                      "type": "expr-struct"
                    }
                  },
                  "props.plots[0].markers[0].line.label.text": {
                    "binding": {
                      "config": {
                        "path": "this.props.plots[0].markers[0].value"
                      },
                      "transforms": [
                        {
                          "expression": "round({value},1)",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.plots[0].markers[0].value": {
                    "binding": {
                      "config": {
                        "avoidScanClassValidation": true,
                        "calculations": [
                          "Maximum"
                        ],
                        "dateRange": {
                          "endDate": "{view.custom.selectedRange.end}",
                          "startDate": "{view.custom.selectedRange.start}"
                        },
                        "enableValueCache": true,
                        "ignoreBadQuality": false,
                        "preventInterpolation": false,
                        "returnFormat": "Calculations",
                        "tags": "{view.custom.key}",
                        "valueFormat": "DATASET"
                      },
                      "transforms": [
                        {
                          "code": "\treturn value.getValueAt(0,2)",
                          "type": "script"
                        }
                      ],
                      "type": "tag-history"
                    }
                  },
                  "props.plots[0].markers[1].line.label.text": {
                    "binding": {
                      "config": {
                        "path": "this.props.plots[0].markers[1].value"
                      },
                      "transforms": [
                        {
                          "expression": "round({value},1)",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.plots[0].markers[1].value": {
                    "binding": {
                      "config": {
                        "avoidScanClassValidation": true,
                        "calculations": [
                          "Minimum"
                        ],
                        "dateRange": {
                          "endDate": "{view.custom.selectedRange.end}",
                          "startDate": "{view.custom.selectedRange.start}"
                        },
                        "enableValueCache": true,
                        "ignoreBadQuality": false,
                        "preventInterpolation": false,
                        "returnFormat": "Calculations",
                        "tags": "{view.custom.key}",
                        "valueFormat": "DATASET"
                      },
                      "transforms": [
                        {
                          "code": "\treturn value.getValueAt(0,2)",
                          "type": "script"
                        }
                      ],
                      "type": "tag-history"
                    }
                  },
                  "props.plots[0].markers[2].line.label.text": {
                    "binding": {
                      "config": {
                        "path": "this.props.plots[0].markers[2].value"
                      },
                      "transforms": [
                        {
                          "expression": "round({value},1)",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.plots[0].markers[2].value": {
                    "binding": {
                      "config": {
                        "avoidScanClassValidation": true,
                        "calculations": [
                          "Average"
                        ],
                        "dateRange": {
                          "endDate": "{view.custom.selectedRange.end}",
                          "startDate": "{view.custom.selectedRange.start}"
                        },
                        "enableValueCache": true,
                        "ignoreBadQuality": false,
                        "preventInterpolation": false,
                        "returnFormat": "Calculations",
                        "tags": "{view.custom.key}",
                        "valueFormat": "DATASET"
                      },
                      "transforms": [
                        {
                          "code": "\treturn value.getValueAt(0,2)",
                          "type": "script"
                        }
                      ],
                      "type": "tag-history"
                    }
                  },
                  "props.plots[0].trends[0].columns[0].key": {
                    "binding": {
                      "config": {
                        "path": "view.custom.key[0].alias"
                      },
                      "type": "property"
                    }
                  },
                  "props.plots[0].trends[0].columns[0].styles.normal.fill.color": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.settings.color"
                      },
                      "type": "property"
                    }
                  },
                  "props.plots[0].trends[0].columns[0].styles.normal.stroke.color": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.settings.color"
                      },
                      "type": "property"
                    }
                  },
                  "props.series[0].data": {
                    "binding": {
                      "config": {
                        "aggregate": "MinMax",
                        "avoidScanClassValidation": true,
                        "dateRange": {
                          "endDate": "{view.custom.selectedRange.end}",
                          "startDate": "{view.custom.selectedRange.start}"
                        },
                        "enableValueCache": false,
                        "ignoreBadQuality": true,
                        "preventInterpolation": false,
                        "returnFormat": "Wide",
                        "returnSize": {
                          "numRows": "{view.custom.settings.points}",
                          "type": "FIXED"
                        },
                        "tags": "{view.custom.key}",
                        "valueFormat": "DATASET"
                      },
                      "overlayOptOut": true,
                      "type": "tag-history"
                    }
                  }
                },
                "props": {
                  "defaultStyles": {
                    "colorScheme": "Dark2"
                  },
                  "legend": {
                    "position": "top"
                  },
                  "plots": [
                    {
                      "axes": [
                        {
                          "alignment": "left",
                          "label": {
                            "font": {
                              "color": "",
                              "size": 10
                            },
                            "offset": 0,
                            "style": {
                              "classes": ""
                            },
                            "text": "",
                            "visible": false
                          },
                          "name": "y",
                          "style": {
                            "classes": ""
                          },
                          "tick": {
                            "color": "",
                            "count": "Auto",
                            "label": {
                              "font": {
                                "color": "",
                                "size": 10
                              },
                              "format": "Auto",
                              "style": {
                                "classes": ""
                              }
                            },
                            "style": {
                              "classes": ""
                            }
                          },
                          "width": "auto"
                        }
                      ],
                      "markers": [
                        {
                          "axis": "y",
                          "line": {
                            "color": "",
                            "dashArray": "5 5",
                            "label": {
                              "font": {
                                "color": "",
                                "size": 10
                              },
                              "position": "right",
                              "style": {
                                "classes": ""
                              }
                            },
                            "opacity": 0.5,
                            "style": {
                              "classes": ""
                            },
                            "width": 1
                          },
                          "type": "line",
                          "visible": true
                        },
                        {
                          "axis": "y",
                          "line": {
                            "color": "",
                            "dashArray": "5 5",
                            "label": {
                              "font": {
                                "color": "",
                                "size": 10
                              },
                              "position": "right",
                              "style": {
                                "classes": ""
                              }
                            },
                            "opacity": 0.5,
                            "style": {
                              "classes": ""
                            },
                            "width": 1
                          },
                          "type": "line",
                          "visible": true
                        },
                        {
                          "axis": "y",
                          "line": {
                            "color": "",
                            "dashArray": "5 5",
                            "label": {
                              "font": {
                                "color": "",
                                "size": 10
                              },
                              "position": "left",
                              "style": {
                                "classes": ""
                              }
                            },
                            "opacity": 0.5,
                            "style": {
                              "classes": ""
                            },
                            "width": 1
                          },
                          "type": "line",
                          "visible": true
                        }
                      ],
                      "relativeWeight": 1,
                      "trends": [
                        {
                          "axis": "y",
                          "baselines": [
                            {
                              "axis": "Yaxis",
                              "color": "#D5D5D5",
                              "column": "",
                              "dashArray": "5 5",
                              "function": "avg",
                              "label": {
                                "font": {
                                  "color": "#FFFFFF",
                                  "size": 10
                                },
                                "position": "right",
                                "style": {
                                  "fontWeight": "normal"
                                },
                                "text": "AVG"
                              },
                              "opacity": 1,
                              "style": {},
                              "visible": true,
                              "width": 1
                            },
                            {
                              "axis": "Yaxis",
                              "color": "#FFD500",
                              "column": "",
                              "dashArray": "5 5",
                              "function": "min",
                              "label": {
                                "font": {
                                  "color": "#FFFFFF",
                                  "size": 10
                                },
                                "position": "right",
                                "style": {},
                                "text": "MIN"
                              },
                              "opacity": 1,
                              "style": {},
                              "visible": true,
                              "width": 1
                            },
                            {
                              "axis": "Yaxis",
                              "color": "#FF280D",
                              "column": "",
                              "dashArray": "5 5",
                              "function": "max",
                              "label": {
                                "font": {
                                  "color": "#FFFFFF",
                                  "size": 10
                                },
                                "position": "right",
                                "style": {},
                                "text": "MAX"
                              },
                              "opacity": 1,
                              "style": {},
                              "visible": true,
                              "width": 1
                            }
                          ],
                          "breakLine": true,
                          "columns": [
                            {
                              "color": "#569EC3",
                              "styles": {
                                "highlighted": {
                                  "fill": {
                                    "color": "#3BB5D9",
                                    "opacity": 0.05
                                  },
                                  "stroke": {
                                    "color": "#39A9E6",
                                    "dashArray": null,
                                    "opacity": null,
                                    "width": 2
                                  }
                                },
                                "muted": {
                                  "fill": {
                                    "color": "#3BB5D9",
                                    "opacity": 0.05
                                  },
                                  "stroke": {
                                    "color": "#39A9E6",
                                    "dashArray": null,
                                    "opacity": null,
                                    "width": 2
                                  }
                                },
                                "normal": {
                                  "fill": {
                                    "opacity": 0.05
                                  },
                                  "stroke": {
                                    "dashArray": null,
                                    "opacity": null,
                                    "width": 3
                                  }
                                },
                                "selected": {
                                  "fill": {
                                    "color": "#3BB5D9",
                                    "opacity": 0.05
                                  },
                                  "stroke": {
                                    "color": "#39A9E6",
                                    "dashArray": null,
                                    "opacity": null,
                                    "width": 2
                                  }
                                }
                              }
                            }
                          ],
                          "interpolation": "curveMonotoneX",
                          "radius": 2,
                          "series": "Boiler",
                          "stack": true,
                          "type": "area",
                          "visible": true
                        }
                      ]
                    }
                  ],
                  "series": [
                    {
                      "name": "Boiler"
                    }
                  ],
                  "style": {
                    "filter1": "drop-shadow(0px 0px 5px #FFFFFF)",
                    "overflow": "hidden"
                  },
                  "timeRange": {
                    "visible": false
                  },
                  "title": {
                    "visible": ""
                  },
                  "xTrace": {
                    "infoBox": {
                      "width": 200
                    }
                  }
                },
                "type": "ia.chart.timeseries"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Slider Points"
                    },
                    "position": {
                      "height": 40,
                      "width": 553.98,
                      "x": 85.41,
                      "y": 20.97
                    },
                    "propConfig": {
                      "props.value": {
                        "binding": {
                          "config": {
                            "bidirectional": true,
                            "path": "view.custom.settings.points"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "labels": {
                        "interval": 1900
                      },
                      "max": 2500,
                      "min": 100,
                      "step": 10,
                      "style": {
                        "classes": "pid-slider",
                        "marginRight": "8px"
                      }
                    },
                    "type": "ia.input.slider"
                  },
                  {
                    "meta": {
                      "name": "Label"
                    },
                    "position": {
                      "height": 23.01,
                      "width": 50.03,
                      "x": 111.02,
                      "y": 9.5
                    },
                    "props": {
                      "text": "Points"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "Icon"
                    },
                    "position": {
                      "height": 24,
                      "width": 24,
                      "x": 85,
                      "y": 9
                    },
                    "props": {
                      "color": "--color-label-2",
                      "path": "material/grain"
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "meta": {
                      "name": "Label_0"
                    },
                    "position": {
                      "height": 23.01,
                      "width": 50.03,
                      "x": 588.02,
                      "y": 9.5
                    },
                    "propConfig": {
                      "props.text": {
                        "binding": {
                          "config": {
                            "path": "view.custom.settings.points"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "textStyle": {
                        "textAlign": "right"
                      }
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "Label_1"
                    },
                    "position": {
                      "height": 23.01,
                      "width": 75,
                      "x": 111.02,
                      "y": 59.5
                    },
                    "props": {
                      "text": "Pen Color"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "Icon_0"
                    },
                    "position": {
                      "height": 24,
                      "width": 24,
                      "x": 85,
                      "y": 59
                    },
                    "props": {
                      "color": "--color-label-2",
                      "path": "material/color_lens"
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "meta": {
                      "name": "Color Picker"
                    },
                    "position": {
                      "height": 138,
                      "width": 348,
                      "x": 83.41,
                      "y": 82.5
                    },
                    "propConfig": {
                      "props.params.color": {
                        "binding": {
                          "config": {
                            "bidirectional": true,
                            "path": "view.custom.settings.color"
                          },
                          "overlayOptOut": true,
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "Lib/GUI/Color Picker/Color Picker"
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "Ymin"
                    },
                    "position": {
                      "height": 26,
                      "width": 68.00999999999999,
                      "x": 466.22249999999997,
                      "y": 106
                    },
                    "propConfig": {
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "path": "../Y Axis Auto.props.selected"
                          },
                          "transforms": [
                            {
                              "expression": "!{value}",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "containerStyle": {
                        "classes": "pid-input"
                      },
                      "spinner": {
                        "enabled": false
                      },
                      "style": {
                        "border": "none"
                      },
                      "value": 3
                    },
                    "type": "ia.input.numeric-entry-field"
                  },
                  {
                    "meta": {
                      "name": "Y Axis Auto"
                    },
                    "position": {
                      "height": 24,
                      "rotate": {
                        "anchor": "100% 25%"
                      },
                      "width": 161.00000000000003,
                      "x": 478.38625,
                      "y": 60.980500000000006
                    },
                    "props": {
                      "selected": true,
                      "text": "Y Axis Auto Range",
                      "textPosition": "left"
                    },
                    "type": "ia.input.checkbox"
                  },
                  {
                    "meta": {
                      "name": "Ymax"
                    },
                    "position": {
                      "height": 26,
                      "width": 68.98000000000002,
                      "x": 569.0625,
                      "y": 106
                    },
                    "propConfig": {
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "path": "../Y Axis Auto.props.selected"
                          },
                          "transforms": [
                            {
                              "expression": "!{value}",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "containerStyle": {
                        "classes": "pid-input"
                      },
                      "spinner": {
                        "enabled": false
                      },
                      "style": {
                        "border": "none"
                      },
                      "value": 1197
                    },
                    "type": "ia.input.numeric-entry-field"
                  },
                  {
                    "meta": {
                      "name": "Icon_1"
                    },
                    "position": {
                      "height": 24,
                      "width": 22.340000000000003,
                      "x": 541.495,
                      "y": 108
                    },
                    "props": {
                      "color": "--color-label-2",
                      "path": "material/arrow_right"
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "meta": {
                      "name": "Icon_2"
                    },
                    "position": {
                      "height": 24,
                      "width": 24,
                      "x": 454.40625,
                      "y": 61.5625
                    },
                    "props": {
                      "color": "--color-label-2",
                      "path": "material/blur_linear"
                    },
                    "type": "ia.display.icon"
                  }
                ],
                "meta": {
                  "name": "Settings Menu"
                },
                "position": {
                  "height": "100%",
                  "width": "100%"
                },
                "propConfig": {
                  "position.y": {
                    "binding": {
                      "config": {
                        "path": "view.custom.settings.show"
                      },
                      "transforms": [
                        {
                          "fallback": 350,
                          "inputType": "scalar",
                          "mappings": [
                            {
                              "input": true,
                              "output": 0
                            }
                          ],
                          "outputType": "scalar",
                          "type": "map"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "style": {
                    "backdrop-filter": "blur(3px)",
                    "backgroundColor": "--color-pid-popup",
                    "transition": "1s"
                  }
                },
                "type": "ia.container.coord"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.view.custom.settings.show \u003d not self.view.custom.settings.show"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Settings",
                  "tooltip": {
                    "enabled": true,
                    "location": "bottom-left",
                    "text": "Trend Settings"
                  }
                },
                "position": {
                  "height": 24,
                  "width": 24,
                  "x": 13,
                  "y": 11
                },
                "props": {
                  "path": "material/settings",
                  "style": {
                    "classes": "icon-button",
                    "margin-right": 8
                  }
                },
                "type": "ia.display.icon"
              },
              {
                "meta": {
                  "name": "Title"
                },
                "position": {
                  "height": 32,
                  "width": 400,
                  "x": "50%"
                },
                "propConfig": {
                  "props.text": {
                    "binding": {
                      "config": {
                        "path": "view.custom.label"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "style": {
                    "classes": "pid-number",
                    "transform": "translateX(-50%)"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Chart Area"
            },
            "position": {
              "grow": 1
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.coord"
          }
        ],
        "meta": {
          "name": "Main Area"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t# 1. get all date first\n\tsDate \u003d self.view.custom.StartDate\n\teDate \u003d self.view.custom.EndDate\n\tsDateSel \u003d self.view.custom.selectedRange.start\n\teDateSel \u003d self.view.custom.selectedRange.end\n\t\n\t# 2. Cal Full ranges in seconds\n\tfullRange \u003d system.date.secondsBetween(sDate, eDate)\n\tselRange \u003d system.date.secondsBetween(sDateSel, eDateSel)\n\t\n\t# 3. cal offset for shift for 10%\n\tshiftRangeSel \u003d int(selRange * -0.1)\t\n\tsDateSelShift \u003d system.date.addSeconds(sDateSel, shiftRangeSel)\n\teDateSelShift \u003d system.date.addSeconds(eDateSel, shiftRangeSel)\n\n\tself.view.custom.selectedRange.start \u003d sDateSelShift\n\tself.view.custom.selectedRange.end \u003d eDateSelShift\n\n\t\n\tif sDateSelShift \u003e sDate: # we are in the fullrange\n\t\tpass\n\telse: # we are out of the fullrange\tso ajust fullrange 10% to left\n\t\tself.view.custom.StartDate \u003d system.date.addSeconds(sDate, shiftRangeSel)\n\t\tself.view.custom.EndDate \u003d system.date.addSeconds(eDate, shiftRangeSel)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Shift Left",
              "tooltip": {
                "enabled": true,
                "location": "bottom-left",
                "tail": false,
                "text": "Shift Range Back"
              }
            },
            "position": {
              "basis": "26px",
              "shrink": 0
            },
            "props": {
              "path": "material/keyboard_arrow_left",
              "style": {
                "classes": "icon-button"
              }
            },
            "type": "ia.display.icon"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tif self.view.custom.DatePicker !\u003d \u0027Start\u0027:\n\t\tself.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display \u003d True\n\t\tself.view.custom.DatePicker \u003d \u0027Start\u0027\n\telse:\t\n\t\tself.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display \u003d not self.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display\n\t\tself.view.custom.DatePicker \u003d \u0027\u0027\n\t#self.view.custom.DatePicker \u003d \u0027Start\u0027"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Start Date",
              "tooltip": {
                "enabled": true,
                "location": "bottom",
                "text": "Click to chang\nStart Range"
              }
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "props.style.color": {
                "binding": {
                  "config": {
                    "path": "view.custom.DatePicker"
                  },
                  "transforms": [
                    {
                      "fallback": "--color-label-1",
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "Start",
                          "output": "orange"
                        },
                        {
                          "input": "End",
                          "output": "--color-label-1"
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "dateFormat({view.custom.StartDate},\u0027yyyy/MM/dd HH:mm\u0027)\r\n"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--color-bk-0",
                "border-radius": 3,
                "cursor": "pointer",
                "fontSize": 12,
                "max-width": 110,
                "min-height": 28,
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t# 1. get all date first\n\tsDate \u003d self.view.custom.StartDate\n\teDate \u003d self.view.custom.EndDate\n\tsDateSel \u003d self.view.custom.selectedRange.start\n\teDateSel \u003d self.view.custom.selectedRange.end\n\t\n\t# 2. Cal Full ranges in seconds\n\tfullRange \u003d system.date.secondsBetween(sDate, eDate)\n\tselRange \u003d system.date.secondsBetween(sDateSel, eDateSel)\n\t\n\t# 3. cal offset for shift for 120% for zoom\n\tscaleRange \u003d int(fullRange * 1.2)\n\tcenterSel \u003d system.date.addSeconds(sDateSel, selRange/2)\n\n\t# 4. update fullrange for new zoom\n\tself.view.custom.StartDate \u003d system.date.addSeconds(centerSel, scaleRange/2 * -1)\n\tself.view.custom.EndDate \u003d system.date.addSeconds(centerSel, scaleRange/2 *  1)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Zoon Out",
              "tooltip": {
                "delay": 1000,
                "enabled": true,
                "location": "bottom",
                "tail": false,
                "text": "Zoom Out"
              }
            },
            "position": {
              "basis": "24px",
              "shrink": 0
            },
            "props": {
              "path": "material/zoom_out",
              "style": {
                "classes": "icon-button example",
                "margin": "0 5px 0 10px"
              }
            },
            "type": "ia.display.icon"
          },
          {
            "meta": {
              "name": "ChartRangeSelector"
            },
            "position": {
              "shrink": 2
            },
            "propConfig": {
              "props.data": {
                "binding": {
                  "config": {
                    "aggregate": "MinMax",
                    "avoidScanClassValidation": true,
                    "dateRange": {
                      "endDate": "{view.custom.EndDate}",
                      "startDate": "{view.custom.StartDate}"
                    },
                    "enableValueCache": true,
                    "ignoreBadQuality": false,
                    "preventInterpolation": false,
                    "returnFormat": "Wide",
                    "returnSize": {
                      "numRows": "100",
                      "type": "FIXED"
                    },
                    "tags": "{view.custom.key}",
                    "valueFormat": "DATASET"
                  },
                  "overlayOptOut": true,
                  "type": "tag-history"
                }
              },
              "props.selectedRange.end": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.selectedRange.end"
                  },
                  "type": "property"
                }
              },
              "props.selectedRange.start": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.selectedRange.start"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "areaStyles": {
                "colorScheme": "PiYG",
                "colors": [
                  "var(--color-label-0)"
                ]
              },
              "brushRange": {
                "visible": false
              },
              "selectedRange": {},
              "style": {
                "backgroundColor": "transparent",
                "border-radius": 3,
                "min-height": 52,
                "padding": 0,
                "transform": "scaleY(0.5)"
              },
              "timeAxis": {
                "visible": false
              },
              "yAxis": {
                "visible": false,
                "width": 0
              }
            },
            "type": "ia.chart.chartrangeselector"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t# 1. get all date first\n\tsDate \u003d self.view.custom.StartDate\n\teDate \u003d self.view.custom.EndDate\n\tsDateSel \u003d self.view.custom.selectedRange.start\n\teDateSel \u003d self.view.custom.selectedRange.end\n\t\n\t# 2. Cal Full ranges in seconds\n\tfullRange \u003d system.date.secondsBetween(sDate, eDate)\n\tselRange \u003d system.date.secondsBetween(sDateSel, eDateSel)\n\t\n\t# 3. cal offset for shift for 80% for zoom\n\tscaleRange \u003d int(fullRange * 0.8)\n\tcenterSel \u003d system.date.addSeconds(sDateSel, selRange/2)\n\n\t# 4. update fullrange for new zoom\n\tif fullRange \u003e 10:\n\t\tself.view.custom.StartDate \u003d system.date.addSeconds(centerSel, scaleRange/2 * -1)\n\t\tself.view.custom.EndDate \u003d system.date.addSeconds(centerSel, scaleRange/2 *  1)\t\n\t\t\n\t\t# sel range is out of the new zoom in range\n\t\tif scaleRange \u003c selRange:\n\t\t\tself.view.custom.selectedRange.start \u003d self.view.custom.StartDate\n\t\t\tself.view.custom.selectedRange.end \u003d self.view.custom.EndDate"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Zoom In",
              "tooltip": {
                "delay": 1000,
                "enabled": true,
                "location": "bottom",
                "text": "Zoom In"
              }
            },
            "position": {
              "basis": "24px",
              "shrink": 0
            },
            "props": {
              "path": "material/zoom_in",
              "style": {
                "classes": "icon-button example",
                "margin": "0 10px 0 5px"
              }
            },
            "type": "ia.display.icon"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tif self.view.custom.DatePicker !\u003d \u0027End\u0027:\n\t\tself.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display \u003d True\n\t\tself.view.custom.DatePicker \u003d \u0027End\u0027\n\telse:\t\n\t\tself.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display \u003d not self.parent.parent.getChild(\"Main Area\").getChild(\"DateTimePicker\").position.display\n\t\tself.view.custom.DatePicker \u003d \u0027\u0027\n "
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "End Date",
              "tooltip": {
                "enabled": true,
                "location": "bottom",
                "text": "Click to chang\nEnd Range"
              }
            },
            "position": {
              "basis": "120px"
            },
            "propConfig": {
              "props.style.color": {
                "binding": {
                  "config": {
                    "path": "view.custom.DatePicker"
                  },
                  "transforms": [
                    {
                      "fallback": "--color-label-1",
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "Start",
                          "output": "--color-label-1"
                        },
                        {
                          "input": "End",
                          "output": "orange"
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "dateFormat({view.custom.EndDate},\u0027yyyy/MM/dd HH:mm\u0027)\r\n"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--color-bk-0",
                "border-radius": 3,
                "cursor": "pointer",
                "fontSize": 12,
                "max-width": 110,
                "min-height": 28,
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t# 1. get all date first\n\tsDate \u003d self.view.custom.StartDate\n\teDate \u003d self.view.custom.EndDate\n\tsDateSel \u003d self.view.custom.selectedRange.start\n\teDateSel \u003d self.view.custom.selectedRange.end\n\t\n\t# 2. Cal Full ranges in seconds\n\tfullRange \u003d system.date.secondsBetween(sDate, eDate)\n\tselRange \u003d system.date.secondsBetween(sDateSel, eDateSel)\n\t\n\t# 3. cal offset for shift for 10%\n\tshiftRangeSel \u003d int(selRange * 0.1)\t\n\tsDateSelShift \u003d system.date.addSeconds(sDateSel, shiftRangeSel)\n\teDateSelShift \u003d system.date.addSeconds(eDateSel, shiftRangeSel)\n\n\tself.view.custom.selectedRange.start \u003d sDateSelShift\n\tself.view.custom.selectedRange.end \u003d eDateSelShift\n\n\t\n\tif eDateSelShift \u003c eDate: # we are in the fullrange\n\t\tpass\n\telse: # we are out of the fullrange\tso ajust fullrange 10% to left\n\t\tself.view.custom.StartDate \u003d system.date.addSeconds(sDate, shiftRangeSel)\n\t\tself.view.custom.EndDate \u003d system.date.addSeconds(eDate, shiftRangeSel)\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Shift Right",
              "tooltip": {
                "delay": 1000,
                "enabled": true,
                "location": "bottom-right",
                "tail": false,
                "text": "Shift Range forward"
              }
            },
            "position": {
              "basis": "26px",
              "shrink": 0
            },
            "props": {
              "path": "material/keyboard_arrow_right",
              "style": {
                "classes": "icon-button"
              }
            },
            "type": "ia.display.icon"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t#\tself.view.custom.EndDate \u003d system.date.now()\n#\tself.view.custom.StartDate \u003d system.date.addHours(system.date.now(), -1)\n\tself.view.refreshBinding(\"custom.StartDate\")\n\tself.view.refreshBinding(\"custom.EndDate\")\t\n\tself.view.refreshBinding(\"custom.selectedRange.start\")\n\tself.view.refreshBinding(\"custom.selectedRange.end\")\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Refresh Icon",
              "tooltip": {
                "enabled": true,
                "location": "bottom",
                "tail": false,
                "text": "Refresh Last Hour"
              }
            },
            "position": {
              "basis": "24px",
              "shrink": 0
            },
            "props": {
              "path": "material/refresh",
              "style": {
                "classes": "icon-button",
                "margin-right": 5
              }
            },
            "type": "ia.display.icon"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tsDate \u003d self.view.custom.StartDate\n\teDate \u003d self.view.custom.EndDate\n\t\n\tdataset \u003d system.tag.queryTagHistory(paths\u003d[self.view.params.tagPath], columnNames\u003d[self.view.params.tagPath.replace(\u0027[default]\u0027,\"\")], startDate\u003d sDate, endDate\u003d eDate, returnSize\u003d self.view.custom.settings.points , aggregationMode\u003d\u0027LastValue\u0027)\n\tfile \u003d self.view.custom.label\n\tfile \u003d file.replace(\"/\",\" \")\n\tsystem.perspective.download(file + \u0027.xlsx\u0027, system.dataset.toExcel(True,[dataset],True))"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Save Data",
              "tooltip": {
                "enabled": true,
                "location": "bottom-right",
                "tail": false,
                "text": "Export To Excel"
              }
            },
            "position": {
              "basis": "24px",
              "shrink": 0
            },
            "props": {
              "path": "nader/xls",
              "style": {
                "classes": "icon-button",
                "margin-right": 8
              }
            },
            "type": "ia.display.icon"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "id": "dockChart",
                    "type": "close"
                  },
                  "scope": "C",
                  "type": "dock"
                }
              }
            },
            "meta": {
              "name": "Close",
              "tooltip": {
                "enabled": true,
                "location": "bottom-right",
                "tail": false,
                "text": "Close Dock"
              }
            },
            "position": {
              "basis": "24px",
              "shrink": 0
            },
            "props": {
              "path": "material/keyboard_arrow_down",
              "style": {
                "classes": "icon-button",
                "margin-right": 8
              }
            },
            "type": "ia.display.icon"
          }
        ],
        "meta": {
          "name": "Header"
        },
        "position": {
          "basis": "40px",
          "shrink": 0
        },
        "props": {
          "alignItems": "center",
          "style": {
            "backgroundColor": "--color-bk-2",
            "border-top": "solid 2px var(--color-bk-1)",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column-reverse",
      "justify": "flex-end",
      "style": {
        "backdrop-filter": "blur(4px)",
        "background-color": "--color-tr-0",
        "classes": "popup-noBorder",
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}